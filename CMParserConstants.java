/* Generated By:JavaCC: Do not edit this line. CMParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CMParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT = 6;
  /** RegularExpression Id. */
  int ELSE = 7;
  /** RegularExpression Id. */
  int IF = 8;
  /** RegularExpression Id. */
  int INT = 9;
  /** RegularExpression Id. */
  int RETURN = 10;
  /** RegularExpression Id. */
  int VOID = 11;
  /** RegularExpression Id. */
  int WHILE = 12;
  /** RegularExpression Id. */
  int NUMBER = 13;
  /** RegularExpression Id. */
  int EMPTY = 14;
  /** RegularExpression Id. */
  int ID = 15;
  /** RegularExpression Id. */
  int LETTER = 16;
  /** RegularExpression Id. */
  int DIGIT = 17;
  /** RegularExpression Id. */
  int LPAREN = 18;
  /** RegularExpression Id. */
  int RPAREN = 19;
  /** RegularExpression Id. */
  int LBRACE = 20;
  /** RegularExpression Id. */
  int RBRACE = 21;
  /** RegularExpression Id. */
  int LBRACKET = 22;
  /** RegularExpression Id. */
  int RBRACKET = 23;
  /** RegularExpression Id. */
  int SEMICOLON = 24;
  /** RegularExpression Id. */
  int COMMA = 25;
  /** RegularExpression Id. */
  int DOT = 26;
  /** RegularExpression Id. */
  int ASSIGN = 27;
  /** RegularExpression Id. */
  int GT = 28;
  /** RegularExpression Id. */
  int LT = 29;
  /** RegularExpression Id. */
  int EQ = 30;
  /** RegularExpression Id. */
  int LE = 31;
  /** RegularExpression Id. */
  int GE = 32;
  /** RegularExpression Id. */
  int NE = 33;
  /** RegularExpression Id. */
  int PLUS = 34;
  /** RegularExpression Id. */
  int MINUS = 35;
  /** RegularExpression Id. */
  int STAR = 36;
  /** RegularExpression Id. */
  int SLASH = 37;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<COMMENT>",
    "\"else\"",
    "\"if\"",
    "\"int\"",
    "\"return\"",
    "\"void\"",
    "\"while\"",
    "<NUMBER>",
    "\"\"",
    "<ID>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
  };

}
